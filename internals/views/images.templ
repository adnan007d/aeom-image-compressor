package views

import (
	"fmt"
	"strconv"
)

type ImageType struct {
	Src  string
	Size int
	Name string
}

type CompressedImagesType struct {
	Source ImageType
	Dest   ImageType
	Width  int
	ZipId  string
}

func kbToMB(n int) string {
	var literal string
	switch {
	case n < 1e6:
		kb := float64(n) / 1e3
		literal = fmt.Sprintf("%.2fKB", kb)
		break
	default:
		mb := float64(n) / 1e6
		literal = fmt.Sprintf("%.2fMb", mb)
		break
	}

	return literal
}

templ CompressedImages(images []CompressedImagesType, zipId string) {
  <a class="px-4 py-2 bg-white rounded-lg text-black font-semibold w-full block text-center my-5" href={ templ.SafeURL("/zip/" + zipId) }>Zip It And Ship It</a>
	for _, image := range images {
		<two-up class="max-w-7xl w-max">
			<div class="relative">
				<span class="absolute left-2 top-2">Original { kbToMB(image.Source.Size) } - { image.Source.Name }</span>
				<img width={ strconv.Itoa(image.Width) } src={ image.Source.Src }/>
			</div>
			<div class="relative">
				<span class="absolute left-2 top-2">New { kbToMB(image.Dest.Size) } - { image.Dest.Name }</span>
				<img width={ strconv.Itoa(image.Width) } src={ image.Dest.Src }/>
			</div>
		</two-up>
	}
}

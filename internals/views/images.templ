package views

import (
	"fmt"
	"strconv"
)

type ImageType struct {
	Src  string
	Size int
	Name string
}

type CompressedImagesType struct {
	Source ImageType
	Dest   ImageType
	Width  int
	ZipId  string
}

func kbToMB(n int) string {
	var literal string
	switch {
	case n < 1e6:
		kb := float64(n) / 1e3
		literal = fmt.Sprintf("%.2fKB", kb)
		break
	default:
		mb := float64(n) / 1e6
		literal = fmt.Sprintf("%.2fMb", mb)
		break
	}

	return literal
}

templ CompressedImages(images []CompressedImagesType, zipId string) {
	<a class="px-4 py-2 bg-white rounded-lg text-black font-semibold w-full block text-center my-5" href={ templ.SafeURL("/zip/" + zipId) }>Zip It And Ship It</a>
	/*	for _, image := range images {
		<two-up class="max-w-7xl w-max">
			<div class="relative">
				<span class="absolute left-2 top-2">Original { kbToMB(image.Source.Size) } - { image.Source.Name }</span>
				<img width={ strconv.Itoa(image.Width) } src={ image.Source.Src }/>
			</div>
			<div class="relative">
				<span class="absolute left-2 top-2">New { kbToMB(image.Dest.Size) } - { image.Dest.Name }</span>
				<img width={ strconv.Itoa(image.Width) } src={ image.Dest.Src }/>
			</div>
		</two-up> 
	} */
	<div class="grid gap-5 md:grid-cols-2">
		for i, image := range images {
			<div class="border-white border-2 p-3 flex flex-col gap-3">
				<img class="h-full w-full object-contain" src={ image.Dest.Src } loading="lazy"/>
				<div class="mt-auto flex justify-between items-center">
					<p>
						{ kbToMB( image.Dest.Size) } saved <span class={ "text-green-500", templ.KV("text-red-500", image.Source.Size - image.Dest.Size < 0) }>{ kbToMB(image.Source.Size - image.Dest.Size) } </span>
					</p>
					<button type="submit" class="modal-trigger px-4 py-2 bg-white rounded-lg text-black font-semibold" data-modal-target={ "modal-" + strconv.Itoa(i) }>Compare</button>
					<div id={ "modal-" + strconv.Itoa(i) } class="fixed inset-[5%] bg-black border-2 z-[9999] border-white p-3" style="display: none;">
						<header class="sticky top-0">
							<button data-modal-target={ "modal-" + strconv.Itoa(i) } class="modal-close-button text-xl ml-auto block">X</button>
						</header>
						<div class="h-full">
							<two-up class="h-[90%] relative mx-auto max-w-full w-max">
								<img class="object-contain h-full mx-auto after:content-[&#39;Old&#39;]" width={ strconv.Itoa(image.Width) } src={ image.Source.Src }/>
								<img class="object-contain h-full mx-auto" width={ strconv.Itoa(image.Width) } src={ image.Dest.Src }/>
							</two-up>
						</div>
					</div>
				</div>
			</div>
		}
		<script src="/js/modal.js"></script>
	</div>
	<div id="modal-backdrop" class="fixed inset-0 bg-black/70 z-[69]" style="display: none;"></div>
}
